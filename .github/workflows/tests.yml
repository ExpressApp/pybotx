name: Tests

on: push

jobs:
  tests:
    name: Tests
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        python-version: [3.7, 3.8]
    steps:
      - uses: actions/checkout@master

      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install poetry
        run: |
          pip install poetry==1.0
          poetry config virtualenvs.in-project true

      - name: Set up cache
        uses: actions/cache@v1
        id: cache
        with:
          path: .venv
          key: venv-${{ runner.os }}-py-${{ matrix.python-version }}-poetry-${{ hashFiles('poetry.lock') }}

      - name: Ensure cache is healthy
        if: steps.cache.outputs.cache-hit == 'true'
        shell: bash
        run: poetry run pip --version >/dev/null 2>&1 || rm -rf .venv

      - name: Install dependencies
        shell: bash
        run: poetry install --extras tests

      - name: Run tests
        run: |
          poetry run nox -s test -- --cov=botx --cov=tests --cov-report=term-missing --cov-report=xml --cov-fail-under=100

      - uses: codecov/codecov-action@v1.0.6
        with:
          file: ./coverage.xml
          fail_ci_if_error: true
