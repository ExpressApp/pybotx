name: Tests

on: push

jobs:
  tests:
    name: Tests
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8]
    steps:
      - uses: actions/checkout@v1
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - uses: actions/cache@v1
        id: cache-poetry
        with:
          path: ~/.cache/pip
          key: get-poetry-${{ runner.os }}-py-${{ matrix.python-version }}
          restore-keys: |
            get-poetry-${{ runner.os }}-py-
            get-poetry-${{ runner.os }}-
      - name: Install poetry
        if: steps.cache-poetry.outputs.cache-hit != 'true'
        run: |
          pip install poetry==1.0
          poetry config virtualenvs.in-project true
      - uses: actions/cache@v1
        id: cache-deps
        with:
          path: .venv
          key: venv-${{ runner.os }}-py-${{ matrix.python-version }}-poetry-${{ hashFiles('poetry.lock') }}
          restore-keys: |
            venv-${{ runner.os }}-py-${{ matrix.python-version }}-poetry-
            venv-${{ runner.os }}-py-${{ matrix.python-version }}-
            venv-${{ runner.os }}-py-
            venv-${{ runner.os }}-
      - name: Install dependencies
        if: steps.cache-deps.outputs.cache-hit != 'true'
        run: |
          poetry install --extras tests
      - name: Run tests
        run: |
          source .venv/bin/activate
          ./scripts/test
# TODO: uncomment after settings CODECOV_TOKEN. DO NOT MERGE BEFORE
#      - name: Upload coverage to Codecov
#        run: bash <(curl -s https://codecov.io/bash) -t $TOKEN -B $REF
#        env:
#          TOKEN: ${{ secrets.CODECOV_TOKEN }}
#          REF: ${{ github.ref }}
