[tool:pytest]
testpaths = tests
timeout = 10
filterwarnings =
    error
    ignore::DeprecationWarning

[coverage:run]
source = botx
branch = True

[coverage:report]
precision = 2
exclude_lines =
    pragma: no cover
    raise NotImplementedError
    raise NotImplemented
    if TYPE_CHECKING:
    except ImportError:


[mypy]
plugins = pydantic.mypy

disallow_untyped_defs = True
strict_optional = True
warn_redundant_casts = True
warn_unused_ignores = True

[pydantic-mypy]
init_forbid_extra = True
init_typed = True
warn_required_dynamic_aliases = True
;warn_untyped_fields = True

[mypy-loguru]
ignore_missing_imports = True

[isort]
multi_line_output = 3
include_trailing_comma = True
line_length = 88
force_grid_wrap = 0
combine_as_imports = True

[flake8]
max-line-length = 88
max-arguments = 7
max-local-variables = 7
i-control-code = False
exclude =
per-file-ignores =
    # re-export entities using __all__
    botx/__init__.py: WPS410
nested-classes-whitelist =
    Config,
ignore =
    # TEMP: will be fixed after more strict linters configuration
    D, A003, F541, T101, WPS433, WPS440

    # common errors:
    # black handles whitespace before ':'.
    E203,
    # also handled by black.
    C8,
    # this project uses Google Docstrings with markdown for docs.
    RST,
    D205, D400, DAR, D202
    # assert usages in library are normal.
    S101,

    # WPS:
    # 1xx:
    # utils is a suitable module name for a small library.
    WPS100,
    # there are a lot of 'param' and 'values' word usages in this library since it parses signature and check params.
    # 'handler` is used as 'view' alternative for bot commands.
    # and some other words are limitations from BotX API.
    WPS110,

    # Found module with too many imports
    WPS201,
    # Found too many module members
    WPS202,
    # Found too many methods
    WPS214,
    # string constant over-use
    WPS226,

    # 3xx:
    # f-strings are very useful.
    WPS305
    # ignore error on classes without parents.
    WPS306,
    # used for documentation.
    WPS322,
    # used for docstrings in enums.
    WPS326

    # 4xx:
    # WPS does not recognize properties setters, so there are some extra `noqa` usages.
    WPS402,
    # used for documentation.
    WPS428,

    # 6xx:
    # class attributes from pydantic will be transformed into object attributes.
    WPS601
    # some objects here use async __call__ for executing logic.
    WPS610,
no-accept-encodings = True
inline-quotes = "