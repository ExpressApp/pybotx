[mypy]
plugins = pydantic.mypy

warn_unused_configs = True
disallow_any_generics = True
disallow_subclassing_any = True
disallow_untyped_calls = True
disallow_untyped_defs = True
disallow_incomplete_defs = True
check_untyped_defs = True
disallow_untyped_decorators = True
no_implicit_optional = True
warn_redundant_casts = True
warn_unused_ignores = True
warn_return_any = True
no_implicit_reexport = True
strict_equality = True
show_error_codes = True

[mypy-tests.*]
# https://github.com/python/mypy/issues/9689
disallow_untyped_decorators = False

[mypy-aiofiles.*]
ignore_missing_imports = True

[mypy-pytest.*]
ignore_missing_imports = True

[mypy-respx.*]
ignore_missing_imports = True


[isort]
profile = black
multi_line_output = 3


[flake8]
format = wemake
show-source = true

max-line-length = 88
inline-quotes = double
nested_classes_whitelist = Config
allowed_domain_names = data, handler, result, content, file

per-file-ignores =
    botx/bot/bot.py:WPS203
    botx/__init__.py:WPS410,WPS412,F401,
    botx/bot/api/entities.py:WPS202,
    botx/bot/api/enums.py:WPS202,
    # https://github.com/wemake-services/wemake-python-styleguide/issues/2172
    # TODO: Drop this ignores on writing docs
    botx/bot/handler_collector.py:WPS437, DAR101, DAR201, DAR401
    botx/client/notifications_api/internal_bot_notification.py:WPS202
    tests/*:E501,WPS110,WPS114,WPS116,WPS118,WPS202,WPS221,WPS226,WPS402,WPS420,WPS428,WPS430,WPS432,WPS441,WPS442,WPS520,S105,S106
    botx/shared_models/domain/attachments.py:WPS202
    botx/bot/api/attachments.py:WPS202,WPS212
    # TODO: Remove ignore after improving models structure
    botx/client/notifications_api/markup.py:WPS202
    # TODO: Drop this ignores on writing docs
    botx/client/get_token.py:DAR101, DAR201, DAR401
ignore =
    # TODO: Drop this ignores on writing docs
    D202, RST202, RST215

    # Class without base class
    WPS306,
    # Upper-case constant in class
    WPS115,
    # Too many arguments
    WPS211,
    # f-strings
    WPS305,
    # Implicit string concatenation
    WPS326,
    # Module docstring
    D100,
    # Class docstring
    D101,
    # Method docstring
    D102,
    # Function docstring
    D103,
    # Package docstring
    D104,
    # Magic method docstring
    D105,
    # Nested class docstring
    D106,
    # __init__ docstring
    D107,
    # Line break before binary operator
    W503,
    # Too many methods
    WPS214,
    # Too many imports
    WPS201,
    # Overused expression
    WPS204,
    # Too many local vars
    WPS210,
    # Too many imported names from module
    WPS235,
    # Multiple conditions
    WPS337,
    # Nested imports (often used with ImportError)
    WPS433,
    # Forbidden `@staticmethod`
    WPS602,
    # Forbidden `assert`
    S101,


[tool:pytest]
testpaths = tests

addopts =
  --strict-markers
  --tb=short
  --cov=botx
  --cov-report=term-missing
  --cov-branch

markers =
    wip: "Work in progress"


[coverage:report]
exclude_lines =
    pragma: no cover
    if TYPE_CHECKING:
    raise NotImplementedError
    except ImportError:
    ...  # noqa: WPS428
    def __repr__
