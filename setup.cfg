# All configuration for plugins and other utils is defined here.
# Read more about `setup.cfg`:
# https://docs.python.org/3/distutils/configfile.html


[flake8]
format = wemake
show-source = True
statistics = False

# Flake plugins:
max-line-length = 88
inline-quotes = double
nested-classes-whitelist = Config
allowed-domain-names =
  # handler is something similar to "views" from common framework, but for bot:
  handler,

  # BotX API is built with similar to json-rpc approach and use "result" field for responses:
  result,

  # file is field that is used in BotX API and it's an entity provided by library:
  file,

# Excluding some directories:
exclude = .git,__pycache__,.venv,.eggs,*.egg

# Disable some checks:
ignore =
  # Docs:
  # Disable nested classes documentation, since only Config for pydantic is allowed:
  D106,
  # This project uses google style and mkdocs for docs:
  RST,

  # WPS:
  # 3xx
  # Disable required inheritance from object:
  WPS306,

  # Google docs style defines
  WPS322,

  # 6xx
  # A lot of functionality in this lib is build around async __call__:
  WPS610,

  # TODO:
  # WPS bugs:
  WPS601,

# Docs: https://github.com/snoack/flake8-per-file-ignores
# You can completely or partially disable our custom checks,
# to do so you have to ignore `WPS` letters for all python files:
per-file-ignores =
    # WPS:
    # "validated_values" is required name for pydantic validator in case it receives validated query_params:
    botx/collecting/handlers/validators.py: WPS110,


[isort]
# isort configuration:
# https://github.com/timothycrosley/isort/wiki/isort-Settings
include_trailing_comma = true
# See https://github.com/timothycrosley/isort#multi-line-output-modes
multi_line_output = 3
line_length = 88
force_grid_wrap = 0
combine_as_imports = True


[darglint]
# darglint configuration:
# https://github.com/terrencepreilly/darglint
strictness = long


[tool:pytest]
# Timeout for tests, so they can not take longer
# than this amount of seconds.
# You should adjust this value to be as low as possible.
# Configuration:
# https://pypi.org/project/pytest-timeout/
timeout = 5

# Directories that are not visited by pytest collector:
norecursedirs = *.egg .eggs dist build docs .tox .git __pycache__

# You will need to measure your tests speed with `-n auto` and without it,
# so you can see whether it gives you any performance gain, or just gives
# you an overhead. See `docs/template/development-process.rst`.
addopts =
  --strict
  --tb=short
  --cov=botx
  --cov=tests
  --cov-branch
  --cov-report=term-missing
  --cov-report=html
  --cov-report=xml
  --no-cov-on-fail
  --cov-fail-under=100


[coverage:run]
# Here we specify plugins for coverage to be used:
plugins =
  coverage_conditional_plugin

omit =


[coverage:coverage_conditional_plugin]
# Here we specify our pragma rules:
rules =
  "sys_version_info < (3, 8)": py-lt-38


[mypy]
# Mypy configuration:
# https://mypy.readthedocs.io/en/latest/config_file.html
plugins = pydantic.mypy

allow_redefinition = False
check_untyped_defs = True
disallow_untyped_decorators = True
disallow_any_explicit = True
disallow_any_generics = True
disallow_untyped_calls = True
disallow_untyped_defs = True
ignore_errors = False
ignore_missing_imports = True
implicit_reexport = False
local_partial_types = True
strict_optional = True
strict_equality = True
no_implicit_optional = True
warn_unused_ignores = True
warn_redundant_casts = True
warn_unused_configs = True
warn_unreachable = True
warn_no_return = True


[pydantic-mypy]
init_forbid_extra = True
init_typed = True
warn_required_dynamic_aliases = True
warn_untyped_fields = True


[mypy-noxfile]
# Nox decorators return untyped callables
disallow_untyped_decorators = false


[mypy-tests.*]
# ignore mypy on tests package
ignore_errors = true
